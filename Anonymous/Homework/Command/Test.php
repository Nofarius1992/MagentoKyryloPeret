<?php

namespace Anonymous\Homework\Command;

use Magento\Framework\DataObjectFactory;
use Magento\Framework\Event\ManagerInterface;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Zombie\Homework\Model\TestParams;

class Test extends Command
{
    public TestParams $params;

    public ManagerInterface $eventManager;

    private DataObjectFactory $dataObjectFactory;

    public function __construct(
        TestParams $params,
        ManagerInterface $eventManager,
        DataObjectFactory $dataObjectFactory
    ) {
        $this->manager = $params->getManager();
        $this->params = $params;
        $this->eventManager = $eventManager;
        $this->dataObjectFactory = $dataObjectFactory;
        parent::__construct();
    }

    protected function configure()
    {
        $this->setName('anonymous:testcommand');
        $this->setDescription('A cli playground for testing commands');
        parent::configure(); // TODO: Change the autogenerated stub
    }

    public function execute(InputInterface $input, OutputInterface $output)
    {
        $message = $this->manager->getMessage();
        $messageObj = $this->dataObjectFactory->create([
            'data' => [$message]
        ]);
        $this->eventManager->dispatch('tutorial_object_manager_command', ['command_message' => $messageObj]);
        $output->writeln($messageObj->getData('new_message'));

        $output->writeln('------------------------------------------------');

        $output->writeln('Свойства обьекта \Zombie\Homework\Model\TestParams :');
        /**
         * Объект нельзя переобразовать в строку.
         * var_dump отображает структурированную информацию об одном
         * или нескольких выражениях, включая их тип и значение. Массивы и объекты анализируются рекурсивно
         * с разным отступом у значений для визуального отображения структуры.
         */
        $output->writeln(print_r($this->params->getParams('Значение из класса \Anonymous\Homework\Command\Test')));

        $output->writeln('------------------------------------------------');
        $output->writeln($this->manager->getMessage());
        $output->writeln($_SERVER['REQUEST_TIME']);
    }
}
